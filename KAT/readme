1. Getting started
-------------------------
This file is the known answer test of our LAC algorithm. There are four files.
	- KAT_VALUES: KAT values for encrypt, kem, key exchange, and authenticated key exchange algorithms, see section 2.
  	- lac-ref: the source code to generate KAT values based on reference implementation.
  	- lac-opt: the source code to generate KAT values based on optimized implementation
  	- lac-avx: the source code to generate KAT values based on avx implementation.

To generate KAT values, in lac-ref, lac-opt or lac-avx file, just run:

		make 

	and then execute:

         	./KATencrypt

	to generate KAT values of encryption algorithm, and execute:
	 
	 	./KATkem

	to generate KAT values of kem algorithm, and execute:

	 	./KATke

	to generate KAT values of key exchange algorithm, and execute:

	 	./KATake

	to generate KAT values of authenticated key exchange algorithm. 

The above data is under just one security level. If you want to change security level, modify it in "lac_param.h". Change the third line as,
	
		#define LAC128

	or 

		#define LAC192

	or 
	
		#define LAC256

Supported platforms:
  Linux and Windows (with msys2).

2. KAT values
-------------------------
In KAT values file, there are four types of known answer tests (KATs):
  - LAC.CPA: data in ENCRYPT file.
  - LAC.CCA: data in KEM file.
  - LAC.KE: data in KE file.
  - LAC.AKE: data in AKE file.
  
All the test data are corresponding to the supporting documentation. We test the three sets of parameters described as table 1 (in the supporting documentation, and the following tables and algorithms are also in the supporting documentation) for each types. We use the source code offered by NIST at https://csrc.nist.gov/Projects/Post-Quantum-Cryptography/Post-Quantum-Cryptography-Standardization/Example-Files to generate KATs.

2.1 LAC.CPA
In this section, we test LAC.CPA.KG algorithm 1, LAC.CPA.ENC algorithm 2, and LAC.CPA.DEC algorithm 3. The name of the test file is "PQCencryptKAT_*" and "*" means the size of secret key. In the request file, inputs are as follows,
  - seed denotes the seed which will be used to generate random bytes in every algorithm.
  - msg denotes the message which will be encrypted by the encryption algorithm.
  - mlen denotes the size of message. 

In the response file, outputs are as follows,
  - pk denotes the public key.
  - sk denotes the secret key.
  - c denotes the result of LAC.CPA.ENC(PK, PLAINTEXT).
  - clen denotes the size of ciphertext. 

2.2 LAC.CCA
In this section, we test LAC.CCA.KG, LAC.CCA.ENC algorithm 8, and LAC.CCA.DEC algorithm9. The name of the test file is "PQCkemKAT_*" and "*" means the size of secret key. In the request file, the input is as follows,
  - seed denotes the seed which will be used to generate random bytes in every algorithm.

In the response file, outputs are as follows,
  - pk denotes the public key.
  - sk denotes the secret key.
  - ct denotes "c" in LAC.CCA.Enc algorithm 8.
  - ss denotes "K" in LAC.CCA.Enc algorithm 8.
  

2.3 LAC.KE
In this section, we test the processes of key exchange between Alice and Bob as figure 1. The name of the test file is "PQCkeKAT_*" and "*" means the size of secret key. In the request file, the input is as follows,
  - seed denotes the seed which will be used to generate random bytes in every algorithm.

In the response file, outputs are as follows,
  - pk denotes the public key.
  - sk denotes the secret key.
  - c denotes the result sent from Bob to Alice.
  - k denotes Bob's and Alice's session key.

2.4 LAC.AKE
In this section, we test the processes of authenticated key exchange between Alice and Bob as figure 2. The name of the test file is "PQCakeKAT_*" and "*" means the size of secret key. In the request file, the inputs is as follows,
  - seed denotes the seed which will be used to generate random bytes in every algorithm.

In the response file, outputs are as follows,
  - pk_a denotes Alice's public key.
  - sk_a denotes Alice's secret key.
  - pk_b denotes Bob's public key.
  - sk_b denotes Bob's secret key.
  - pk denotes the public key.
  - sk denotes the secret key.
  - c_a denotes "c1" sent from Alice to Bob in figure 2.
  - c_b denotes "(c2, c3)" sent from Bob to Alice in figure 2.
  - k denotes Bob's and Alice's session key.


If you have any questions or suggestions, please contact us luxianhui@iie.ac.cn or hejingnan@iie.ac.cn. 









